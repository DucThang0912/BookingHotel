@model BookingHotel.Models.Hotel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Name - Hotel Gallery</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /*MenuGroup*/
        .menuGroup {
            width: 100%;
            border-collapse: collapse; /* Xóa khoảng cách giữa các ô */
        }

            .menuGroup th {
                padding: 10px 20px; /* Khoảng cách giữa chữ và viền của mỗi ô */
                text-align: center; /* Căn giữa nội dung trong ô */
            }

                .menuGroup th a {
                    position: relative;
                    text-decoration: none;
                    color: #333;
                    font-weight: bold;
                    transition: color 0.3s;
                }

                    .menuGroup th a::after {
                        content: '';
                        position: absolute;
                        left: 0;
                        bottom: -5px; /* Điều chỉnh khoảng cách giữa gạch và chữ */
                        width: 100%;
                        height: 3px; /* Độ dài của gạch */
                        border-radius: 2px;
                        background-color: #008080; /* Màu của gạch */
                        transition: width 0.3s;
                        transform: scaleX(0); /* Ẩn gạch ban đầu */
                    }

                    .menuGroup th a:hover::after,
                    .menuGroup th a:focus::after {
                        transform: scaleX(1); /* Hiển thị gạch khi hover hoặc focus */
                    }

        .horizontal-line {
            height: 2px; /* Chiều cao của thanh ngang */
            background-color: #ccc; /* Màu sắc của thanh ngang */
            margin-bottom: 10px; /* Khoảng cách giữa thanh ngang và phần tử phía dưới */
        }

        /*Image Hotel*/
        .image-gallery-container {
            display: flex;
            gap: 10px;
            margin-top: 20px;
            max-width: 1200px;
            height: auto;
            margin-left: auto;
            margin-right: auto;
        }

        .main-image-container {
            flex: 1;
            width: 40%;
            height: 310px;
            overflow: hidden;
            border-radius: 16px;
        }

        .main-image {
            width: 100%;
            height: 100%;
            border-radius: 16px;
            object-fit: cover;
        }

        .sub-image-container {
            flex: 1;
            width: 60%;
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-template-rows: auto auto;
            gap: 10px;
            overflow: hidden;
        }

        .sub-image {
            width: 100%;
            height: 150px;
            border-radius: 16px;
            object-fit: cover;
        }
        /* CSS styles for modal box and backdrop */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            border-radius: 16px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            width: 70%;
            height: 80%;
            overflow-y: auto;
        }

        .modal-close {
            width: 90%;
            display: flex;
            justify-content: flex-end;
        }

        .close {
            cursor: pointer;
            width: 30px;
            height: 30px;
            line-height: 30px;
            text-align: center;
            background-color: transparent;
            border: 1px solid black;
            border-radius: 2px;
        }

            .close:hover {
                background-color: red;
                color: white;
            }

        .modal-image {
            width: 30%;
            padding: 10px;
            overflow-y: auto;
        }

        .modal-image {
            width: 200px;
            height: 200px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 10px;
        }

        .modal-backdrop {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        /*Room Hotel*/
        /*--------------book--------*/
        .flex {
            display: flex;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-gap: 30px;
        }

        .book {
            width: 100%;
            height: 20vh;
            color: white;
        }

            .book .input {
                background: #242e5a;
                padding: 10px 10px 20px 10px;
            }

            .book .search {
                background: #3f9cc1;
                padding: 20px;
            }

        .flex input {
            width: 100%;
            padding: 15px;
            border: 2px solid rgba(255, 255, 255, 0.1);
            outline: none;
            background: #263760;
            margin-top: 20px;
            color: white;
        }

        ::placeholder {
            color: white;
        }

        /*--------------book--------*/


        /*--------Rating------*/
        .rating-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center; /* Thêm dòng này để căn giữa */
            width: 40%;
            margin: 0 auto; /* Thêm dòng này để căn giữa */
            background-color: #003366;
            color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        .rating-item {
            display: flex;
            align-items: center;
            justify-content: space-between; /* Thêm dòng này để căn hai phần tử ở hai đầu */
            width: 100%; /* Thêm dòng này để đảm bảo rating-item chiếm toàn bộ chiều rộng của rating-container */
            margin-bottom: 10px;
        }

        .rating-label {
            font-weight: bold;
            text-align: left; /* Thêm dòng này để căn trái rating-label */
        }

        .rating-stars {
            display: flex;
            justify-content: flex-end; /* Thêm dòng này để căn phải rating-stars */
        }

            .rating-stars input[type="radio"] {
                display: none;
            }

            .rating-stars label {
                cursor: pointer;
                padding: 5px 10px;
                background-color: gray;
                color: #fff;
                border-radius: 5px;
                margin-right: 5px;
                transition: background-color 0.3s ease;
            }

            .rating-stars input[type="radio"]:checked + label {
                background-color: #ff6600;
            }

        .submit-btn {
            background-color: #17a2b8;
            color: #fff;
            border: none;
            width: 100%;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            align-self: center; 
        }

        /*Comment*/
        .comment-section {
            margin-top: 20px;
        }

        .comment-list {
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f9f9f9;
        }

            .comment-list .card {
                border: none;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }

            .comment-list .card-title {
                font-size: 18px;
                font-weight: bold;
                margin-bottom: 5px;
            }

            .comment-list .card-text {
                font-size: 16px;
                line-height: 1.5;
                margin-bottom: 10px;
            }

            .comment-list .text-muted {
                font-size: 14px;
            }

    </style>
</head>
<body>
    <!-- Menu Group -->
    <div class="navbar_menuGroup border border-light-subtle p-2 mt-4">
        <table class="menuGroup">
            <thead>
                <tr>
                    <th><a href="#">Tổng quan</a></th>
                    <th><a href="#">Phòng nghỉ</a></th>
                    <th><a href="#">Tiện nghi</a></th>
                    <th><a href="#">Đánh giá</a></th>
                </tr>
            </thead>
        </table>
    </div>

    <!--OverView-->
    <div class="overView mt-4 d-flex">
        <div class="col-sm-6 col-md-8 border border-light-subtle p-3">
            <h2>@Model.Name</h2>
            <p><a href="https://www.google.com/maps/search/?api=1&query=@Model.Name" target="_blank">@Model.Address</a></p>
            <div class="horizontal-line"></div>
            <div>@Model.Description</div>
        </div>
        <div class="col-sm-6 col-md-4 border border-light-subtle p-3">
            <iframe width="100%"
                    height="300"
                    frameborder="0"
                    style="border: 0"
                    src="https://maps.google.com/maps?q=@Model.Name&output=embed"
                    allowfullscreen></iframe>
        </div>
    </div>

    <!--Image Hotel-->
    <div class="image-gallery-container">
        <div class="main-image-container">
            <img class="main-image" src="@Model.ImageUrl" alt="Main Image" onclick="openModal()">
        </div>
        <div class="sub-image-container">
            @if (Model.Images != null)
            {
                foreach (var image in Model.Images.Take(6))
                {
                    <img class="sub-image" src="@image.ImageUrl" alt="Sub Image" onclick="openModal()">
                }
            }
            else
            {
                <p>No images available.</p>
            }
        </div>
    </div>

    <!-- Modal Box -->
    <div id="myModal" class="modal">
        <div class="modal-close">
            <div class="close" onmouseover="highlightCloseIcon(this)" onmouseout="unhighlightCloseIcon(this)" onclick="closeModal()">X</div>
        </div>
        <div class="row">
            <!-- Dùng vòng foreach để lặp ảnh -->
            @if (Model.Images != null)
            {
                int count = 0;
                foreach (var image in Model.Images)
                {
                    <div class="col">
                        <img class="modal-image" src="@image.ImageUrl" alt="Modal Image">
                    </div>
                    @* @if (++count % 4 == 0)
            {
            @:</div><div class="row">
            } *@
                }
            }
            else
            {
                <p>No images available.</p>
            }
        </div>
    </div>
    <div id="modalBackdrop" class="modal-backdrop"></div>

    <!--Room Hotel-->
    <div class="roomHotel">
        <h2>Các phòng trống tại @Model.Name</h2>
        <form id="bookingForm" onsubmit="return handleFormSubmission(event)">
            <div class="book">
                <div class="container flex">
                    <div class="input grid">
                        <div class="box">
                            <label>Ngày nhận phòng:</label>
                            <input type="date" id="checkinDate" name="checkInDate" placeholder="Check-in-Date">
                        </div>
                        <div class="box">
                            <label>Ngày trả phòng:</label>
                            <input type="date" id="checkoutDate" name="checkOutDate" placeholder="Check-out-Date">
                        </div>
                        <div class="box">
                            <label>Người lớn:</label> <br>
                            <input type="number" id="adults" name="adults" placeholder="0" min="0">
                        </div>
                        <div class="box">
                            <label>Trẻ em:</label> <br>
                            <input type="number" id="children" name="children" placeholder="0" min="0">
                        </div>
                        <input type="hidden" id="roomId" name="roomId" value="@Model.Id">
                    </div>
                </div>
            </div>
            <div class="rooms">
                @foreach (var room in Model.Rooms)
                {
                    @if (room.IsAvailable == false)
                    {
                        <div class="room-container d-flex align-items-center border border-light-subtle p-3 mb-3">
                            <div class="room-image mr-3">
                                <img src="@room.Hotel.ImageUrl" alt="Room Image" width="150" height="100">
                            </div>
                            <div class="room-info">
                                <h3>Phòng số: @room.RoomNumber</h3>
                                <p><strong>Giá mỗi đêm:</strong> @room.PricePerNight</p>
                                <p>
                                    <span style="color: green;">Có sẵn</span>
                                </p>
                            </div>
                            <div class="room-capacity ml-auto">
                                @if (room.RoomType != null)
                                {
                                    <p>Sức chứa: @room.RoomType.Adults người lớn @room.RoomType.Children trẻ em</p>
                                }
                                else
                                {
                                    <p>Sức chứa: 0 người</p>
                                }
                            </div>
                            <input type="hidden" name="roomId" value="@room.Id" />
                            <ul class="btnRoom" style="list-style-type: none;">
                                <li>
                                    <button type="submit" class="btn btn-info text-uppercase px-4" name="action" value="checkoutNow" onclick="return validateForm()">Đặt phòng ngay</button>
                                </li>
                                <li class="mt-2">
                                    <button type="submit" class="btn btn-danger text-uppercase px-4" name="action" value="addToCart" onclick="return validateForm()">Thêm vào giỏ hàng</button>
                                </li>
                            </ul>
                        </div>
                    }
                }
            </div>
        </form>
    </div>
    <script>
        function validateForm() {
            var checkinDate = document.getElementById("checkinDate").value;
            var checkoutDate = document.getElementById("checkoutDate").value;
            var adults = document.getElementById("adults").value;

            // Kiểm tra xem các trường đã được nhập hay chưa
            if (checkinDate === "" || checkoutDate === "" || adults === "") {
                alert("Vui lòng điền đầy đủ thông tin trước khi thêm vào giỏ hàng hoặc đặt phòng.");
                return false; // Ngăn form được submit
            }
            if (checkinDate > checkoutDate) {
                alert("Ngày trả phòng không hợp lệ.");
                return false;
            }
            return true; // Cho phép form được submit
        }

        // JavaScript function to open the modal
        function openModal() {
            document.getElementById("myModal").style.display = "block";
            document.getElementById("modalBackdrop").style.display = "block";
        }

        // JavaScript function to close the modal
        function closeModal() {
            document.getElementById("myModal").style.display = "none";
            document.getElementById("modalBackdrop").style.display = "none";
        }
        function highlightCloseIcon(element) {
            element.style.backgroundColor = "red";
        }

        function unhighlightCloseIcon(element) {
            element.style.backgroundColor = "transparent";
        }

        function handleFormSubmission(event) {
            event.preventDefault(); // Ngăn chặn form được gửi đi

            const action = event.submitter.value; // Lấy giá trị của nút được nhấn

            // Lấy giá trị của các trường input từ form và gán vào các trường ẩn
            const checkinDate = document.getElementById("checkinDate").value;
            const checkoutDate = document.getElementById("checkoutDate").value;
            const adults = document.getElementById("adults").value;
            const children = document.getElementById("children").value;

            // Gán các giá trị vào các trường ẩn trong form
            document.getElementById("checkinDate").value = checkinDate;
            document.getElementById("checkoutDate").value = checkoutDate;
            document.getElementById("adults").value = adults;
            document.getElementById("children").value = children;

            if (action === 'addToCart') {
                // Gửi form đến phương thức Checkout trong ShoppingCartController
                event.currentTarget.action = '@Url.Action("AddToCart", "ShoppingCart")';
            } else if (action === 'checkoutNow') {
                // Gửi form đến phương thức CheckoutNow trong ShoppingCartController
                event.currentTarget.action = '@Url.Action("CheckoutNowForm", "ShoppingCart")';
            }

            event.currentTarget.submit(); // Gửi form đi
        }

    </script>
    <!--Đánh giá-->
    <form asp-controller="Hotel" asp-action="AddReview" method="post">
        <input type="hidden" name="hotelId" value="@Model.Id" />
        <div class="rating-container">
            <div class="rating-item">
                <div class="rating-label">Dịch vụ:</div>
                <div class="rating-stars">
                    @for (int i = 2; i <= 10; i += 2)
                    {
                        <input type="radio" id="story-@i" name="Service" value="@i">
                        <label for="story-@i">@i</label>
                    }
                </div>
            </div>

            <div class="rating-item">
                <div class="rating-label">Tiện nghi:</div>
                <div class="rating-stars">
                    @for (int i = 2; i <= 10; i += 2)
                    {
                        <input type="radio" id="gameplay-@i" name="Facilities" value="@i">
                        <label for="gameplay-@i">@i</label>
                    }
                </div>
            </div>

            <div class="rating-item">
                <div class="rating-label">Sạch sẽ:</div>
                <div class="rating-stars">
                    @for (int i = 2; i <= 10; i += 2)
                    {
                        <input type="radio" id="graphics-@i" name="Cleanliness" value="@i">
                        <label for="graphics-@i">@i</label>
                    }
                </div>
            </div>

            <div class="rating-item">
                <div class="rating-label">Thoải mái:</div>
                <div class="rating-stars">
                    @for (int i = 2; i <= 10; i += 2)
                    {
                        <input type="radio" id="sound-@i" name="Comfort" value="@i">
                        <label for="sound-@i">@i</label>
                    }
                </div>
            </div>

            <div class="rating-item">
                <div class="rating-label">Địa điểm:</div>
                <div class="rating-stars">
                    @for (int i = 2; i <= 10; i += 2)
                    {
                        <input type="radio" id="overall-@i" name="Location" value="@i">
                        <label for="overall-@i">@i</label>
                    }
                </div>
            </div>
            <button type="submit" class="submit-btn">Gửi đánh giá</button>
        </div>
    </form>

   <!--Comment-->
    <div class="comment-section">
        <!--Comment Form-->
        <form asp-controller="Hotel" asp-action="AddComment" method="post" class="mb-4">
            <input type="hidden" name="hotelId" value="@Model.Id" />
            <div class="form-group">
                <label for="comment">Nhận xét của bạn:</label>
                <textarea class="form-control" id="comment" name="Content" rows="3" required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Gửi nhận xét</button>
        </form>

        <!--Comment List-->
        <div class="comment-list">
            <h3 class="mb-3">Tất cả nhận xét:</h3>
            @if (Model.Comments != null && Model.Comments.Any())
            {
                @foreach (var comment in Model.Comments)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">@comment.User.FullName</h5>
                            <p class="card-text">@comment.Content</p>
                            <p class="card-text"><small class="text-muted">@comment.CreatedAt.ToString("dd/MM/yyyy")</small></p>
                        </div>
                    </div>
                }
            }
            else
            {
                <p>Chưa có nhận xét nào.</p>
            }
        </div>
    </div>

</body>
</html>
